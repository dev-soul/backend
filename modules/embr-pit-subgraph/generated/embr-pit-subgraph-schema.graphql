directive @derivedFrom(field: String) on FIELD_DEFINITION

directive @entity on OBJECT

directive @subgraphId(id: String) on OBJECT

type Bar {
    address: Bytes!
    block: BigInt!
    decimals: Int!
    cEmbrBurned: BigDecimal!
    cEmbrMinted: BigDecimal!
    id: ID!
    name: String!
    ratio: BigDecimal!
    sharedVestingTokenRevenue: BigDecimal!
    symbol: String!
    timestamp: BigInt!
    totalSupply: BigDecimal!
    users(
        first: Int = 100
        orderBy: User_orderBy
        orderDirection: OrderDirection
        skip: Int = 0
        where: User_filter
    ): [User!]!
    vestingToken: Bytes!
    vestingTokenStaked: BigDecimal!
}

input Bar_filter {
    address: Bytes
    address_contains: Bytes
    address_in: [Bytes!]
    address_not: Bytes
    address_not_contains: Bytes
    address_not_in: [Bytes!]
    block: BigInt
    block_gt: BigInt
    block_gte: BigInt
    block_in: [BigInt!]
    block_lt: BigInt
    block_lte: BigInt
    block_not: BigInt
    block_not_in: [BigInt!]
    decimals: Int
    decimals_gt: Int
    decimals_gte: Int
    decimals_in: [Int!]
    decimals_lt: Int
    decimals_lte: Int
    decimals_not: Int
    decimals_not_in: [Int!]
    cEmbrBurned: BigDecimal
    cEmbrBurned_gt: BigDecimal
    cEmbrBurned_gte: BigDecimal
    cEmbrBurned_in: [BigDecimal!]
    cEmbrBurned_lt: BigDecimal
    cEmbrBurned_lte: BigDecimal
    cEmbrBurned_not: BigDecimal
    cEmbrBurned_not_in: [BigDecimal!]
    cEmbrMinted: BigDecimal
    cEmbrMinted_gt: BigDecimal
    cEmbrMinted_gte: BigDecimal
    cEmbrMinted_in: [BigDecimal!]
    cEmbrMinted_lt: BigDecimal
    cEmbrMinted_lte: BigDecimal
    cEmbrMinted_not: BigDecimal
    cEmbrMinted_not_in: [BigDecimal!]
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    name: String
    name_contains: String
    name_ends_with: String
    name_gt: String
    name_gte: String
    name_in: [String!]
    name_lt: String
    name_lte: String
    name_not: String
    name_not_contains: String
    name_not_ends_with: String
    name_not_in: [String!]
    name_not_starts_with: String
    name_starts_with: String
    ratio: BigDecimal
    ratio_gt: BigDecimal
    ratio_gte: BigDecimal
    ratio_in: [BigDecimal!]
    ratio_lt: BigDecimal
    ratio_lte: BigDecimal
    ratio_not: BigDecimal
    ratio_not_in: [BigDecimal!]
    sharedVestingTokenRevenue: BigDecimal
    sharedVestingTokenRevenue_gt: BigDecimal
    sharedVestingTokenRevenue_gte: BigDecimal
    sharedVestingTokenRevenue_in: [BigDecimal!]
    sharedVestingTokenRevenue_lt: BigDecimal
    sharedVestingTokenRevenue_lte: BigDecimal
    sharedVestingTokenRevenue_not: BigDecimal
    sharedVestingTokenRevenue_not_in: [BigDecimal!]
    symbol: String
    symbol_contains: String
    symbol_ends_with: String
    symbol_gt: String
    symbol_gte: String
    symbol_in: [String!]
    symbol_lt: String
    symbol_lte: String
    symbol_not: String
    symbol_not_contains: String
    symbol_not_ends_with: String
    symbol_not_in: [String!]
    symbol_not_starts_with: String
    symbol_starts_with: String
    timestamp: BigInt
    timestamp_gt: BigInt
    timestamp_gte: BigInt
    timestamp_in: [BigInt!]
    timestamp_lt: BigInt
    timestamp_lte: BigInt
    timestamp_not: BigInt
    timestamp_not_in: [BigInt!]
    totalSupply: BigDecimal
    totalSupply_gt: BigDecimal
    totalSupply_gte: BigDecimal
    totalSupply_in: [BigDecimal!]
    totalSupply_lt: BigDecimal
    totalSupply_lte: BigDecimal
    totalSupply_not: BigDecimal
    totalSupply_not_in: [BigDecimal!]
    vestingToken: Bytes
    vestingTokenStaked: BigDecimal
    vestingTokenStaked_gt: BigDecimal
    vestingTokenStaked_gte: BigDecimal
    vestingTokenStaked_in: [BigDecimal!]
    vestingTokenStaked_lt: BigDecimal
    vestingTokenStaked_lte: BigDecimal
    vestingTokenStaked_not: BigDecimal
    vestingTokenStaked_not_in: [BigDecimal!]
    vestingToken_contains: Bytes
    vestingToken_in: [Bytes!]
    vestingToken_not: Bytes
    vestingToken_not_contains: Bytes
    vestingToken_not_in: [Bytes!]
}

enum Bar_orderBy {
    address
    block
    decimals
    cEmbrBurned
    cEmbrMinted
    id
    name
    ratio
    sharedVestingTokenRevenue
    symbol
    timestamp
    totalSupply
    users
    vestingToken
    vestingTokenStaked
}

scalar BigDecimal

scalar BigInt

input Block_height {
    hash: Bytes
    number: Int
}

scalar Bytes

enum OrderDirection {
    asc
    desc
}

type Query {
    """
    Access to subgraph metadata
    """
    _meta(block: Block_height): _Meta_
    pit(
        """
        The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted.
        """
        block: Block_height
        id: ID!
    ): Bar
    pits(
        """
        The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted.
        """
        block: Block_height
        first: Int = 100
        orderBy: Bar_orderBy
        orderDirection: OrderDirection
        skip: Int = 0
        where: Bar_filter
    ): [Bar!]!
    user(
        """
        The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted.
        """
        block: Block_height
        id: ID!
    ): User
    users(
        """
        The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted.
        """
        block: Block_height
        first: Int = 100
        orderBy: User_orderBy
        orderDirection: OrderDirection
        skip: Int = 0
        where: User_filter
    ): [User!]!
}

type Subscription {
    """
    Access to subgraph metadata
    """
    _meta(block: Block_height): _Meta_
    pit(
        """
        The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted.
        """
        block: Block_height
        id: ID!
    ): Bar
    pits(
        """
        The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted.
        """
        block: Block_height
        first: Int = 100
        orderBy: Bar_orderBy
        orderDirection: OrderDirection
        skip: Int = 0
        where: Bar_filter
    ): [Bar!]!
    user(
        """
        The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted.
        """
        block: Block_height
        id: ID!
    ): User
    users(
        """
        The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted.
        """
        block: Block_height
        first: Int = 100
        orderBy: User_orderBy
        orderDirection: OrderDirection
        skip: Int = 0
        where: User_filter
    ): [User!]!
}

type User {
    address: Bytes!
    pit: Bar
    block: BigInt!
    cEmbr: BigDecimal!
    id: ID!
    timestamp: BigInt!
    vestingTokenHarvested: BigDecimal!
    vestingTokenIn: BigDecimal!
    vestingTokenOut: BigDecimal!
}

input User_filter {
    address: Bytes
    address_contains: Bytes
    address_in: [Bytes!]
    address_not: Bytes
    address_not_contains: Bytes
    address_not_in: [Bytes!]
    pit: String
    pit_contains: String
    pit_ends_with: String
    pit_gt: String
    pit_gte: String
    pit_in: [String!]
    pit_lt: String
    pit_lte: String
    pit_not: String
    pit_not_contains: String
    pit_not_ends_with: String
    pit_not_in: [String!]
    pit_not_starts_with: String
    pit_starts_with: String
    block: BigInt
    block_gt: BigInt
    block_gte: BigInt
    block_in: [BigInt!]
    block_lt: BigInt
    block_lte: BigInt
    block_not: BigInt
    block_not_in: [BigInt!]
    cEmbr: BigDecimal
    cEmbr_gt: BigDecimal
    cEmbr_gte: BigDecimal
    cEmbr_in: [BigDecimal!]
    cEmbr_lt: BigDecimal
    cEmbr_lte: BigDecimal
    cEmbr_not: BigDecimal
    cEmbr_not_in: [BigDecimal!]
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    timestamp: BigInt
    timestamp_gt: BigInt
    timestamp_gte: BigInt
    timestamp_in: [BigInt!]
    timestamp_lt: BigInt
    timestamp_lte: BigInt
    timestamp_not: BigInt
    timestamp_not_in: [BigInt!]
    vestingTokenHarvested: BigDecimal
    vestingTokenHarvested_gt: BigDecimal
    vestingTokenHarvested_gte: BigDecimal
    vestingTokenHarvested_in: [BigDecimal!]
    vestingTokenHarvested_lt: BigDecimal
    vestingTokenHarvested_lte: BigDecimal
    vestingTokenHarvested_not: BigDecimal
    vestingTokenHarvested_not_in: [BigDecimal!]
    vestingTokenIn: BigDecimal
    vestingTokenIn_gt: BigDecimal
    vestingTokenIn_gte: BigDecimal
    vestingTokenIn_in: [BigDecimal!]
    vestingTokenIn_lt: BigDecimal
    vestingTokenIn_lte: BigDecimal
    vestingTokenIn_not: BigDecimal
    vestingTokenIn_not_in: [BigDecimal!]
    vestingTokenOut: BigDecimal
    vestingTokenOut_gt: BigDecimal
    vestingTokenOut_gte: BigDecimal
    vestingTokenOut_in: [BigDecimal!]
    vestingTokenOut_lt: BigDecimal
    vestingTokenOut_lte: BigDecimal
    vestingTokenOut_not: BigDecimal
    vestingTokenOut_not_in: [BigDecimal!]
}

enum User_orderBy {
    address
    pit
    block
    cEmbr
    id
    timestamp
    vestingTokenHarvested
    vestingTokenIn
    vestingTokenOut
}

type _Block_ {
    """
    The hash of the block
    """
    hash: Bytes

    """
    The block number
    """
    number: Int!
}

"""
The type for the top-level _meta field
"""
type _Meta_ {
    """
    Information about a specific subgraph block. The hash of the block
    will be null if the _meta field has a block constraint that asks for
    a block number. It will be filled if the _meta field has no block constraint
    and therefore asks for the latest  block
    """
    block: _Block_!

    """
    The deployment ID
    """
    deployment: String!

    """
    If `true`, the subgraph encountered indexing errors at some past block
    """
    hasIndexingErrors: Boolean!
}

enum _SubgraphErrorPolicy_ {
    """
    Data will be returned even if the subgraph has indexing errors
    """
    allow

    """
    If the subgraph has indexing errors, data will be omitted. The default.
    """
    deny
}
